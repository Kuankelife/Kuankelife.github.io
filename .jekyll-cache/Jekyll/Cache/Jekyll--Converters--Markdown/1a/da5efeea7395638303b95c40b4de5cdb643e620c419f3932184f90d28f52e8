I"ע<p><a href="https://miro.medium.com/max/2981/1*qfA3TgrXngQ4-7bGwNH7Yw.jpeg"></a></p>

<p>Still, she’s got a lot of spirit. I don’t know, what do you think? Hokey religions and ancient weapons are no match for a good blaster at your side, kid. I can’t get involved! I’ve got work to do! It’s not that I like the Empire, I hate it, but there’s nothing I can do about it right now. It’s such a long way from here.</p>

<p>I suggest you try it again, Luke. This time, let go your conscious self and act on instinct. You are a part of the Rebel Alliance and a traitor! Take her away! Your eyes can deceive you. Don’t trust them.</p>

<p>Hokey religions and ancient weapons are no match for a good blaster at your side, kid. I suggest you try it again, Luke. This time, let go your conscious self and act on instinct. Don’t be too proud of this technological terror you’ve constructed. The ability to destroy a planet is insignificant next to the power of the Force.</p>
<blockquote>
  <p>算法，是彩色的。</p>
</blockquote>

<h1 id="baby-step-giant-step">Baby Step Giant Step</h1>

<blockquote>
  <p>又名拔山盖世/北上广深算法</p>
</blockquote>

<p>用于求解 $a^x\equiv b\ (mod\ n)$ 中的最小自然数 $x$</p>

<h2 id="引理">引理</h2>

<p>由欧拉定理知，对于互质的正整数 $a,p$，$a^{\phi(p)}\equiv 1\ (mod\ p)$，且 $x=k·\phi(p)$ 为 $b$ 的循环节</p>

<h2 id="过程">过程</h2>

<ol>
  <li>设 $d=gcd(a,n)$，则原式化为 $a^x\equiv b\ (mod\ {n\over{d^k}})$ 直到 $gcd(a,{n\over {d^k}})=1$</li>
  <li>采用分块思想，令 $x=im-j \in [0,\phi(n))$，则求解：${(a^m)}^i\equiv a^jb\ (mod\ {n\over{d^k}})$</li>
  <li>使用 map/others 存下对应的 $j,a^jb$，枚举 $i$ 得到答案</li>
</ol>

<ul>
  <li>$m$ 一般取 $\sqrt n$</li>
  <li>当 ${d^k} \mid b$，原式有自然数解</li>
  <li>2，3步中，为了方便起见，可求解 ${(a^m)}^i\equiv a^jb({a\over d})^k\ (mod\ {n\over{d^k}})$，则最后的答案为 $x-k=im-j$，即 $x=im-j+k $</li>
</ul>

<h2 id="代码exbsgs">代码（<a href="https://www.luogu.org/problem/P4195">exBSGS</a>）</h2>

<blockquote>
  <p>期望复杂度$O(\sqrt nlog(\sqrt n))$</p>
</blockquote>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
</pre></td><td class="rouge-code"><pre><span class="cp">#include&lt;cstdio&gt;
#include&lt;cmath&gt;
#include&lt;map&gt;
#define ll long long
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="n">map</span><span class="o">&lt;</span><span class="n">ll</span><span class="p">,</span> <span class="n">ll</span><span class="o">&gt;</span><span class="n">mp</span><span class="p">;</span>
<span class="n">ll</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">p</span><span class="p">;</span>
<span class="n">ll</span> <span class="nf">gcd</span><span class="p">(</span><span class="n">ll</span> <span class="n">a</span><span class="p">,</span><span class="n">ll</span> <span class="n">b</span><span class="p">){</span><span class="k">return</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">0</span><span class="o">?</span><span class="n">a</span><span class="o">:</span><span class="n">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">);}</span>
<span class="n">ll</span> <span class="nf">pow</span><span class="p">(</span><span class="n">ll</span> <span class="n">a</span><span class="p">,</span><span class="n">ll</span> <span class="n">b</span><span class="p">,</span><span class="n">ll</span> <span class="n">c</span><span class="p">){</span>
	<span class="n">ll</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span><span class="n">ans</span> <span class="o">=</span> <span class="n">ans</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
		<span class="n">b</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">exbsgs</span><span class="p">(){</span>
	<span class="n">mp</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
	<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">==</span> <span class="mi">1</span> <span class="n">or</span> <span class="n">p</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
		<span class="n">puts</span><span class="p">(</span><span class="s">"0"</span><span class="p">);</span>
		<span class="k">return</span> <span class="p">;</span>
	<span class="p">}</span>
	<span class="n">ll</span> <span class="n">d</span> <span class="o">=</span> <span class="n">gcd</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">p</span><span class="p">),</span><span class="n">ans</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="n">dd</span> <span class="o">=</span> <span class="n">d</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">d</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="n">and</span> <span class="n">p</span> <span class="o">%</span> <span class="n">dd</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="n">dd</span> <span class="o">=</span> <span class="n">dd</span> <span class="o">*</span> <span class="n">d</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">dd</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span><span class="n">dd</span> <span class="o">/=</span> <span class="n">d</span><span class="p">,</span><span class="n">p</span> <span class="o">/=</span> <span class="n">dd</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">%</span> <span class="n">dd</span><span class="p">){</span>
		<span class="n">puts</span><span class="p">(</span><span class="s">"No Solution"</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">ll</span> <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">ll</span><span class="p">)</span><span class="n">ceil</span><span class="p">(</span><span class="n">sqrt</span><span class="p">(</span><span class="n">p</span><span class="p">)),</span><span class="n">temp</span> <span class="o">=</span> <span class="n">b</span> <span class="o">%</span> <span class="n">p</span><span class="p">;</span>
	<span class="n">mp</span><span class="p">[</span><span class="n">temp</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="n">mp</span><span class="p">[</span><span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">p</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
	<span class="n">temp</span> <span class="o">=</span> <span class="n">pow</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">p</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="n">m</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">ans</span> <span class="o">=</span> <span class="n">ans</span> <span class="o">*</span> <span class="n">temp</span> <span class="o">%</span> <span class="n">p</span><span class="p">]){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">ans</span><span class="p">]</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="n">mp</span><span class="p">[</span><span class="n">ans</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"%lld</span><span class="se">\n</span><span class="s">"</span><span class="p">,(</span><span class="n">i</span> <span class="o">*</span> <span class="n">m</span> <span class="o">-</span> <span class="n">mp</span><span class="p">[</span><span class="n">ans</span><span class="p">]</span> <span class="o">+</span> <span class="n">p</span><span class="p">)</span> <span class="o">%</span> <span class="n">p</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">puts</span><span class="p">(</span><span class="s">"No Solution"</span><span class="p">);</span>
	<span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">exbsgs2</span><span class="p">(){</span>
	<span class="n">mp</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
	<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">==</span> <span class="mi">1</span> <span class="n">or</span> <span class="n">p</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
		<span class="n">puts</span><span class="p">(</span><span class="s">"0"</span><span class="p">);</span>
		<span class="k">return</span> <span class="p">;</span>
	<span class="p">}</span>
	<span class="n">ll</span> <span class="n">d</span> <span class="o">=</span> <span class="n">gcd</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">p</span><span class="p">),</span><span class="n">ans</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">d</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="n">and</span> <span class="n">p</span> <span class="o">%</span> <span class="n">d</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
		<span class="n">num</span> <span class="o">++</span><span class="p">;</span>
		<span class="n">p</span> <span class="o">/=</span> <span class="n">d</span><span class="p">,</span><span class="n">ans</span> <span class="o">=</span> <span class="n">ans</span> <span class="o">*</span> <span class="n">a</span> <span class="o">/</span> <span class="n">d</span> <span class="o">%</span> <span class="n">p</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">%</span> <span class="n">d</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="n">b</span> <span class="o">/=</span> <span class="n">d</span><span class="p">;</span>
		<span class="k">else</span> <span class="p">{</span>
			<span class="n">puts</span><span class="p">(</span><span class="s">"No Solution"</span><span class="p">);</span>
			<span class="k">return</span> <span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">ll</span> <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">ll</span><span class="p">)</span><span class="n">ceil</span><span class="p">(</span><span class="n">sqrt</span><span class="p">(</span><span class="n">p</span><span class="p">)),</span><span class="n">temp</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>
	<span class="n">mp</span><span class="p">[</span><span class="n">b</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="n">mp</span><span class="p">[</span><span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">p</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
	<span class="n">temp</span> <span class="o">=</span> <span class="n">pow</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">p</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="n">m</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">ans</span> <span class="o">=</span> <span class="n">ans</span> <span class="o">*</span> <span class="n">temp</span> <span class="o">%</span> <span class="n">p</span><span class="p">]){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">ans</span><span class="p">]</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="n">mp</span><span class="p">[</span><span class="n">ans</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"%lld</span><span class="se">\n</span><span class="s">"</span><span class="p">,(</span><span class="n">i</span> <span class="o">*</span> <span class="n">m</span> <span class="o">-</span> <span class="n">mp</span><span class="p">[</span><span class="n">ans</span><span class="p">]</span> <span class="o">+</span> <span class="n">p</span> <span class="o">+</span> <span class="n">num</span><span class="p">)</span> <span class="o">%</span> <span class="n">p</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">puts</span><span class="p">(</span><span class="s">"No Solution"</span><span class="p">);</span>
	<span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="k">while</span><span class="p">(</span><span class="n">scanf</span><span class="p">(</span><span class="s">"%lld%lld%lld"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="o">&amp;</span><span class="n">p</span><span class="p">,</span><span class="o">&amp;</span><span class="n">b</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="p">){</span>
		<span class="n">a</span> <span class="o">%=</span> <span class="n">p</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">a</span> <span class="n">and</span> <span class="o">!</span><span class="n">b</span><span class="p">)</span><span class="n">puts</span><span class="p">(</span><span class="s">"1"</span><span class="p">);</span>
		<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span><span class="n">puts</span><span class="p">(</span><span class="s">"No Solution"</span><span class="p">);</span>
		<span class="k">else</span> <span class="n">exbsgs2</span><span class="p">();</span>
	<span class="p">}</span>
<span class="p">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="二次剩余">二次剩余</h1>

<blockquote>
  <p>当存在某个 $x$，使 \(x^2\equiv a\ (mod\ p)\) 成立时，称 $a$ 是模 $p$ 的二次剩余</p>

  <p>本方法对于 $p$ 为奇素数成立</p>
</blockquote>

<h2 id="引理-1">引理</h2>

<p>$(a+b)^p\equiv a^p + b^p\ (mod\ p)$</p>

<h3 id="证明">证明</h3>

\[(a+b)^p=\sum_{i=0}^p\binom{p}{i}a^ib^{p-i}\\
\binom{p}{i}\equiv 0\ (mod\ p)\\(i\ne p,i\ne 0,a,b\in \Bbb Z)\]

<h2 id="勒让德符号">勒让德符号</h2>

<h3 id="定义">定义</h3>

\[\left(\frac{a}{p}\right)=
\begin{cases}
1,&amp; \text{$a$ 是模 $p$ 的二次剩余} \\
-1,&amp; \text{$a$ 是模 $p$ 的非二次剩余} \\
0,&amp; a\equiv0 \pmod p
\end{cases}\\
({a\over p})\equiv a^{ {p-1}\over 2}\ (mod\ p)\]

<ul>
  <li>其中 $p$ 为奇素数</li>
</ul>

<h3 id="证明-1">证明</h3>

<p>由费马小定理：$ (a^{ {p-1}\over 2}-1 )(a^{ {p-1}\over 2}+1)\equiv 0\ (mod\ p)$</p>

<p>故：$a^{ {p-1}\over 2}\equiv ±1\ (mod\ p)$</p>

<ul>
  <li>若为二次剩余：
    <ul>
      <li>充分必要性显然</li>
    </ul>
  </li>
  <li>
    <p>若为非二次剩余， 只能 $a^{ {p-1}\over 2}\equiv -1\ (mod\ p)$</p>
  </li>
  <li>算了上面这段待补充<a href="https://okami.biz/2019/01/欧拉准则/">here</a> &amp;&amp; <a href="https://www.cnblogs.com/3200Pheathon/p/10800065.html">here</a></li>
</ul>

<h2 id="二次剩余的数量">二次剩余的数量</h2>

<p>在 $[0,p)$ 中有 ${ {p-1}\over 2}+1$ 个（非二次剩余的数量是 ${ {p-1}\over 2}$）</p>

<h3 id="证明-2">证明</h3>

<p>考虑两个不同的数 $x,y \in (0,p)$，若 $x^2\equiv y^2\ (mod\ p)$，则 $(x-y)(x+y)\equiv 0\ (mod\ p)$，故知 $x+y\equiv 0\ (mod\ p)$，即 $y=p-x$，故这样的数恰有 ${ {p-1}\over 2}$ 对，且每一对的二次剩余都不相同，加上0的存在得到以上<br /></p>

<p>则模域内剩下的数无法得到，即为非二次剩余</p>

<h2 id="过程-1">过程</h2>

<ol>
  <li>随机选取 $t$，使得 $t^2 - a$ 为非二次剩余（选取 $t$ 的期望次数极小）</li>
  <li>令 $b=\sqrt {t^2 - a}$，则 $x=(t+b)^{ {p+1}\over 2}$</li>
</ol>

<h2 id="证明-3">证明</h2>

\[\begin{align}
x^2&amp;=(t+b)^{p+1}\\
&amp;\equiv (t^{p+1}+b^{p+1})\\
&amp;\equiv 1·t^2+(-1)·(t^2 - a)\\
&amp;\equiv a\ (mod\ p)
\end{align}\]

<h2 id="代码二次剩余">代码（<a href="https://www.luogu.org/problem/P5491">二次剩余</a>）</h2>

<blockquote>
  <p>期望复杂度$O(log^2 n)$</p>
</blockquote>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td><td class="rouge-code"><pre><span class="cp">#include&lt;cstdio&gt;
#include&lt;cmath&gt;
#include&lt;algorithm&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">long</span> <span class="kt">long</span> <span class="n">T</span><span class="p">,</span><span class="n">t</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="n">vi</span><span class="p">;</span>
<span class="k">struct</span> <span class="nc">node</span><span class="p">{</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
<span class="p">};</span>
<span class="n">node</span> <span class="nf">mul</span><span class="p">(</span><span class="n">node</span> <span class="n">a</span><span class="p">,</span><span class="n">node</span> <span class="n">b</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">c</span><span class="p">){</span>
	<span class="n">node</span> <span class="n">ans</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">};</span>
	<span class="n">ans</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">b</span><span class="p">.</span><span class="n">x</span> <span class="o">%</span> <span class="n">c</span> <span class="o">+</span> <span class="n">a</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">b</span><span class="p">.</span><span class="n">y</span> <span class="o">%</span> <span class="n">c</span> <span class="o">*</span> <span class="n">vi</span><span class="p">)</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
	<span class="n">ans</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">b</span><span class="p">.</span><span class="n">y</span> <span class="o">%</span> <span class="n">c</span> <span class="o">+</span> <span class="n">a</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">b</span><span class="p">.</span><span class="n">x</span> <span class="o">%</span> <span class="n">c</span><span class="p">)</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">long</span> <span class="kt">long</span> <span class="nf">pow</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">a</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">b</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">c</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">ans</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
		<span class="n">b</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">long</span> <span class="kt">long</span> <span class="nf">powp</span><span class="p">(</span><span class="n">node</span> <span class="n">a</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">b</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">c</span><span class="p">){</span>
	<span class="n">node</span> <span class="n">ans</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">};</span>
	<span class="k">while</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span><span class="n">ans</span> <span class="o">=</span> <span class="n">mul</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">c</span><span class="p">);</span>
		<span class="n">b</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">mul</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">c</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
	<span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
		<span class="n">scanf</span><span class="p">(</span><span class="s">"%d%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">,</span><span class="o">&amp;</span><span class="n">p</span><span class="p">);</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">n</span><span class="p">)</span> <span class="n">puts</span><span class="p">(</span><span class="s">"0"</span><span class="p">);</span>
		<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pow</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">,</span><span class="n">p</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">){</span>
			<span class="n">puts</span><span class="p">(</span><span class="s">"Hola!"</span><span class="p">);</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span><span class="p">{</span>
			<span class="n">t</span> <span class="o">=</span> <span class="n">sqrt</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
			<span class="k">while</span><span class="p">(</span><span class="n">pow</span><span class="p">(</span><span class="n">t</span> <span class="o">*</span> <span class="n">t</span> <span class="o">-</span> <span class="n">n</span><span class="p">,</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">,</span><span class="n">p</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="n">t</span><span class="o">++</span><span class="p">;</span>
			<span class="n">vi</span> <span class="o">=</span> <span class="n">t</span> <span class="o">*</span> <span class="n">t</span> <span class="o">-</span> <span class="n">n</span><span class="p">;</span>
			<span class="n">t</span> <span class="o">=</span> <span class="n">powp</span><span class="p">((</span><span class="n">node</span><span class="p">){</span><span class="n">t</span><span class="p">,</span><span class="mi">1</span><span class="p">},</span><span class="n">p</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">,</span><span class="n">p</span><span class="p">);</span>
			<span class="kt">long</span> <span class="kt">long</span> <span class="n">g</span> <span class="o">=</span> <span class="n">p</span> <span class="o">-</span> <span class="n">t</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">g</span> <span class="n">or</span> <span class="o">!</span><span class="n">t</span><span class="p">)</span> <span class="n">puts</span><span class="p">(</span><span class="s">"0"</span><span class="p">);</span>
			<span class="k">else</span> <span class="n">printf</span><span class="p">(</span><span class="s">"%d %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">min</span><span class="p">(</span><span class="n">g</span><span class="p">,</span><span class="n">t</span><span class="p">),</span><span class="n">max</span><span class="p">(</span><span class="n">g</span><span class="p">,</span><span class="n">t</span><span class="p">));</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span> 
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="miller-rabin">Miller rabin</h1>

<blockquote>
  <p>int范围内使用2，3，5，7验证即可</p>
</blockquote>

<h2 id="引理-2">引理</h2>

<ul>
  <li>
    <p>费马小定理：</p>

\[if\ p\ is\ a\ prime,\\a^{p-1}\equiv 1\ (mod\ p)\]
  </li>
  <li>
    <p>二次探测定理：</p>

\[if\ p\ is\ a\ prime,\\and\ a^2\equiv 1\ (mod\ p),\\
a\equiv ±1\ (mod\ p)\]
  </li>
</ul>

<h2 id="步骤">步骤</h2>

<ol>
  <li>设 $p-1 = {2^k}·t $（$t$ 为奇数）</li>
  <li>随机选取 $a\in (1,p-1)$，从 $a^{2^0·t}$ 开始，直到 $a^{2^k·t}$ 为止，套用二次探测定理及费马小定理验证</li>
  <li>若验证失败，则为合数；否则多取几个随机 $a$ 进行验证</li>
</ol>

<h2 id="代码线性筛素数">代码（<a href="https://www.luogu.org/problem/P3383">线性筛素数</a>）</h2>

<blockquote>
  <p>期望复杂度$O(klog^2 n)$</p>
</blockquote>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="cp">#include&lt;iostream&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">p</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">};</span>
<span class="kt">long</span> <span class="kt">long</span> <span class="nf">pow</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="n">c</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span><span class="n">ans</span> <span class="o">=</span> <span class="n">ans</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
		<span class="n">b</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">c</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">bool</span> <span class="nf">check</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">t</span><span class="p">,</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">k</span><span class="o">--</span><span class="p">){</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="n">a</span> <span class="o">%</span> <span class="n">x</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">==</span> <span class="mi">1</span> <span class="n">and</span> <span class="n">temp</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">!=</span> <span class="mi">0</span> <span class="n">and</span> <span class="n">temp</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">!=</span> <span class="n">x</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
		<span class="n">temp</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">temp</span> <span class="o">==</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">bool</span> <span class="nf">mb</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">2</span> <span class="n">or</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">3</span> <span class="n">or</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">5</span> <span class="n">or</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">7</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="n">t</span> <span class="o">=</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">t</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
		<span class="n">t</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="p">,</span>
		<span class="n">k</span> <span class="o">++</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">4</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">check</span><span class="p">(</span><span class="n">pow</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">),</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">))</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">x</span><span class="p">;</span>
	<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="o">&gt;&gt;</span><span class="n">m</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="n">m</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">){</span>
		<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">x</span><span class="p">;</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">mb</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">?</span><span class="s">"Yes"</span><span class="o">:</span><span class="s">"No"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="pollard-rho">Pollard Rho</h1>

<blockquote>
  <p>反正我觉得挺玄学的</p>
</blockquote>

<h2 id="原理">原理</h2>

<blockquote>
  <p>随机，生日悖论</p>

  <p>需要选取数的个数约在 $O(N^{1\over 4})$</p>

  <p>${a_i}$ 这个函数是玄学函数</p>
</blockquote>

<ol>
  <li>随机选取 $a_0\in (1,N-1)$，不断计算得到 $a_i\equiv a^2_{i-1}+k\ (mod\ N)$（$k$ 为常数）
    <ul>
      <li>模域下，根据生日悖论，数列 ${a_i}$ 形成环且期望环长为 $\sqrt N$</li>
    </ul>
  </li>
  <li>判断是否满足 $gcd(abs(a_i-a_{i-1}),N) \in (1,N)$，若满足则找到 $N$ 的一个因子
    <ul>
      <li>成环后仍未找到因子则表示分解失败，可调整 $k$ 重新分解</li>
    </ul>
  </li>
  <li>找到后通过 Miller rabin 算法判断因子是否为质数，若不是则使用该算法继续分解</li>
</ol>

<h2 id="优化">优化</h2>

<ul>
  <li>
    <p>路径倍长</p>

    <blockquote>
      <p>某题解认为 127 是个不错的 loop</p>
    </blockquote>

    <p>在对 $N$ 模域下，$gcd(\prod abs(a_i-a_{i-1}),N)$ 与非模域下相同，故每相隔一段时间后计算 $gcd(\prod abs(a_i-a_{i-1}),N)$ 以优化对于 $gcd$ 的时间复杂度</p>
  </li>
</ul>

<h2 id="代码">代码</h2>

<ul>
  <li><strong><em>咕咕咕待补充</em></strong></li>
</ul>

:ET